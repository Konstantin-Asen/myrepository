#include <iostream>
using namespace std;
const int ROW = 3;
const int COL = 4;
void input(int[][COL], int, int);
void max_count(int[][COL], int, int, int&, int&);
void reduce_matrix(int[][COL], int, int, int[]);
void ascend_vector(int[], int);
void print(int[], int);
int count_zero(int[][COL], int, int);
void main()
{
	const int SIZE = ROW * COL;
	int matrix[ROW][COL];
	int vector[SIZE];
	int max, count_max;
	cout << "Function 1:\n===========" << endl;
	input(matrix, ROW, COL);
	cout << "\nFunction 2:\n===========" << endl;
	max_count(matrix, ROW, COL, max, count_max);
	cout << "Maximum element of the matrix: " << max << endl;
	cout << "Number of maximum encounters: " << count_max << endl;
	cout << "\nFunction 3:\n===========" << endl;
	reduce_matrix(matrix, ROW, COL, vector);
	cout << "\n\nFunction 4:\n===========" << endl;
	ascend_vector(vector, SIZE);
	print(vector, SIZE);
	cout << "\nFunction 5:\n===========" << endl;
	cout << "Number of elements with a value of 0: " << count_zero(matrix, ROW, COL) << endl;
}
void input(int matr[][COL], int row, int col)
{
	for (int i = 0; i < row; i++)
	{
		for (int j = 0; j < col; j++)
		{
			cout << "Element[" << (i + 1) << "][" << (j + 1) << "] = ";
			cin >> matr[i][j];
		}
	}
}
void max_count(int matr[][COL], int row, int col, int& max, int& count)
{
	max = matr[0][0];
	count = 0;
	for (int i = 0; i < row; i++)
	{
		for (int j = 0; j < col; j++)
		{
			if (matr[i][j] > max) max = matr[i][j];
		}
	}
	for (int i = 0; i < row; i++)
	{
		for (int j = 0; j < col; j++)
		{
			if (matr[i][j] == max) count++;
		}
	}
}
void reduce_matrix(int matr[][COL], int row, int col, int arr[])
{
	int size = 0;
	for (int i = 0; i < row; i++)
	{
		for (int j = 0; j < col; j++)
		{
			arr[size] = matr[i][j];
			cout << arr[size] << " ";
			size++;
		}
	}
}
void ascend_vector(int arr[], int size)
{
	int swap;
	for (int i = 0; i < size - 1; i++)
	{
		for (int j = 0; j < size - i - 1; j++)
		{
			if (arr[j] > arr[j + 1])
			{
				swap = arr[j];
				arr[j] = arr[j + 1];
				arr[j + 1] = swap;
			}
		}
	}
}
void print(int arr[], int size)
{
	for (int i = 0; i < size; i++)
	{
		cout << arr[i] << " ";
	}
	cout << endl;
}
int count_zero(int matr[][COL], int row, int col)
{
	int count = 0;
	for (int i = 0; i < row; i++)
	{
		for (int j = 0; j < col; j++)
		{
			if (matr[i][j] == 0) count++;
		}
	}
	return count;
}
